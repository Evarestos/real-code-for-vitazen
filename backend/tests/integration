const request = require('supertest');
const app = require('../../app');
const User = require('../../models/User');
const Program = require('../../models/Program');
const mongoose = require('mongoose');

describe('Program Creation Integration', () => {
  let token;

  beforeAll(async () => {
    await mongoose.connect(process.env.MONGODB_URI_TEST, { useNewUrlParser: true, useUnifiedTopology: true });
  });

  afterAll(async () => {
    await mongoose.connection.close();
  });

  beforeEach(async () => {
    await User.deleteMany({});
    await Program.deleteMany({});

    const userResponse = await request(app)
      .post('/api/users/register')
      .send({
        username: 'testuser',
        email: 'test@example.com',
        password: 'password123'
      });
    token = userResponse.body.token;
  });

  test('Create and retrieve a program', async () => {
    const createResponse = await request(app)
      .post('/api/programs')
      .set('Authorization', `Bearer ${token}`)
      .send({
        name: 'Test Program',
        description: 'This is a test program'
      });
    expect(createResponse.statusCode).toBe(201);
    const programId = createResponse.body._id;

    const getResponse = await request(app)
      .get(`/api/programs/${programId}`)
      .set('Authorization', `Bearer ${token}`);
    expect(getResponse.statusCode).toBe(200);
    expect(getResponse.body.name).toBe('Test Program');
  });
});
